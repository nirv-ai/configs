global
    # chroot  /var/empty
    daemon
    fd-hard-limit 50000
    group haproxy
    log stdout format raw local0 debug
    lua-load /etc/haproxy/modules/cors.lua
    maxconn 1000
    pidfile /var/run/haproxy.pid
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2
    stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
    user haproxy

defaults
    log global
    mode tcp
    option contstats
    option forwardfor
    option logasap
    option redispatch
    option tcplog
    retries 0
    timeout client           3s
    timeout connect          5s
    timeout http-keep-alive  10s
    timeout http-request     10s
    timeout queue            30s
    timeout server           3s
    timeout tarpit           30s
    timeout tunnel           3600s


# edge accessible http/s on 8080
frontend edge
    bind :8080

    maxconn 10000
    tcp-request content accept if { req.ssl_hello_type 1 }
    tcp-request content accept if HTTP
    tcp-request inspect-delay 100ms

    default_backend forward_https
    use_backend forward_http if HTTP

backend forward_http
    server serverhttp dev.nirv.ai:8081
backend forward_https
    server serverhttps dev.nirv.ai:8443

defaults
    backlog 10000
    default-server init-addr last,libc,none
    log global
    mode http
    option contstats
    option forwardfor
    option http-server-close
    option httplog
    option logasap
    option redispatch
    retries 0
    timeout client           3s
    timeout connect          5s
    timeout http-keep-alive  10s
    timeout http-request     10s
    timeout queue            30s
    timeout server           3s
    timeout tarpit           30s
    timeout tunnel           3600s

frontend stats
    bind *:8404 ssl crt /etc/ssl/certs/live/dev.nirv.ai/combined.pem

    maxconn 100
    stats admin if TRUE
    stats auth  nirvai:nirvai
    stats enable
    stats refresh 10s
    stats uri /edge

## edge router for 80|443
frontend edge-load-balancer
    bind :8081 name edgehttp
    bind :8443,:3000 name edgehttps ssl crt /etc/ssl/certs/live/dev.nirv.ai/combined.pem

    acl bff_path path_beg -i /bff/
    acl hdr_connection_upgrade hdr(Connection)  -i upgrade
    acl hdr_upgrade_websocket  hdr(Upgrade)     -i websocket
    acl host_ws hdr_beg(Host) -i ws.
    capture	request	header	Content-Length  len	10
    capture	request	header	Host    len	20
    capture	request	header	Referer	len	20
    capture	request	header	User-Agent  len	16
    capture	response header	Content-Length	len	10
    http-request lua.cors "GET,PUT,POST,PATCH" "dev.nirv.ai" "*"
    http-request redirect scheme https code 301 unless { ssl_fc }
    http-response lua.cors
    maxconn 10000

    default_backend ui
    use_backend bff if bff_path
    use_backend ui if hdr_connection_upgrade
    use_backend ui if hdr_upgrade_websocket
    use_backend ui if host_ws

backend bff
    http-request replace-path /bff(/)?(.*) /\2
    server bff1 core_bff:3001

backend ui
    server ui1 core_ui:3000

frontend edge-vault
    bind :8200 name vaulthttps ssl crt /etc/ssl/certs/live/dev.nirv.ai/combined.pem

    http-request redirect scheme https code 301 unless { ssl_fc }
    mode http
    use_backend vault

backend vault
    server vault1 core_vault:8300 ssl verify none
