name: ${COMPOSE_PROJECT_NAME}

x-nirvai-cert: &host-cert
  mode: 0440
  source: nirvai_cert
  target: host_cert.pem
x-nirvai-chain: &host-chain
  mode: 0440
  source: nirvai_chain
  target: host_chain.pem
x-nirvai-combined: &host-combined
  mode: 0440
  source: nirvai_combined
  target: host_combined.pem
x-nirvai-privkey: &host-privkey
  mode: 0440
  source: nirvai_privkey
  target: host_privkey.pem
x-nirvai-fullchain: &host-fullchain
  mode: 0440
  source: nirvai_fullchain
  target: host_fullchain.pem

x-service-defaults: &service-defaults
  cpu_count: 2
  cpu_shares: 1024
  domainname: nirv.ai
  init: true
  platform: linux/amd64
  privileged: false
  stop_grace_period: 5s
  restart: unless-stopped

x-service-healthcheck: &service-healthcheck
  interval: 30s
  retries: 5
  start_period: 10s
  timeout: 5s

x-deploy: &service-deploy
  mode: global
  resources:
    reservations:
      cpus: ".10"
      memory: "1gb"
    limits:
      cpus: ".50"
      memory: "4gb"

services:
  core_proxy:
    <<: *service-defaults
    healthcheck:
      <<: *service-healthcheck
      test: "curl -f -H 'user-agent: just stopping by and wanted to say hello'  https://${PROJECT_HOSTNAME}:${PROXY_PORT_STATS}/health || exit $?"
    deploy:
      <<: *service-deploy
    secrets:
      - *host-combined
    ports:
      - "${PROXY_PORT_STATS}:${PROXY_PORT_STATS}"
      - "${PROXY_PORT_VAULT}:${PROXY_PORT_VAULT}"
    volumes:
      - ./apps/nirvai-core-proxy/src:/usr/local/etc/haproxy:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro,z
    networks:
      corenetwork:
        aliases:
          - ${PROJECT_HOSTNAME} # proxy is the entrypoint to the project
          - core_proxy
    env_file:
      - ./.env
    entrypoint: ./haproxy.compose.bootstrap.sh
    image: ${REG_HOSTNAME}:${REG_PORT_HOST}/${COMPOSE_PROJECT_NAME}/core-proxy:${ENV:-development}
    build:
      context: ./apps/nirvai-core-proxy/src
      dockerfile: ./haproxy.compose.Dockerfile

  core_vault:
    <<: *service-defaults
    deploy:
      <<: *service-deploy
    secrets:
      - *host-fullchain
      - *host-privkey
    env_file:
      - ./.env
      - ./apps/nirvai-core-vault/.env.vault
    networks:
      corenetwork:
        aliases:
          - ${VAULT_HOSTNAME}
    entrypoint: ["vault", "server", "-log-level=warn", "-config=/vault/config"]
    volumes:
      - ./apps/nirvai-core-vault/src/config:/vault/config
      - ./apps/nirvai-core-vault/src/data:/vault/data
    cap_add:
      - IPC_LOCK
    ports:
      - "${VAULT_PORT_CUNT}:${VAULT_PORT_CUNT}"
    image: ${REG_HOSTNAME}:${REG_PORT_HOST}/${COMPOSE_PROJECT_NAME}/core-vault:${ENV:-development}
    build:
      context: ./apps/nirvai-core-vault/src
      dockerfile: ./vault.Dockerfile

networks:
  corenetwork:
    attachable: true

secrets:
  nirvai_cert:
    file: "${REG_HOST_CERTS}/cert.pem"
  nirvai_chain:
    file: "${REG_HOST_CERTS}/chain.pem"
  nirvai_combined:
    file: "${REG_HOST_CERTS}/combined.pem"
  nirvai_privkey:
    file: "${REG_HOST_CERTS}/privkey.pem"
  nirvai_fullchain:
    file: "${REG_HOST_CERTS}/fullchain.pem"
